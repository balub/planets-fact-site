{"version":3,"sources":["context/PlanetContext.js","context/CategoryContext.js","constants/constants.js","components/header/styles/Header.js","components/header/index.js","components/navbar/styles/NavBar.js","context/CurrentPlanetContext.js","components/navbar/index.js","components/card/styles/Card.js","components/card/index.js","components/footer/styles/Footer.js","components/footer/index.js","containers/header.js","containers/card.js","containers/footer.js","pages/home.js","constants/themes.js","App.js","index.js"],"names":["PlanetContext","createContext","IsLoadingContext","usePlanetData","useContext","PlanetContextProvider","children","useState","planetData","setPlanetData","isLoading","setIsLoading","useEffect","data","Provider","value","CategoryContext","CategoryUpdateContext","useCategory","CategoryProvider","category","setCategory","newCategory","COLOR_SCHEME","FONT_WEIGHT","FONT_FAMILY","PLANET_RATIO","BREAKPOINT","Container","styled","div","Title","Header","restProps","List","ListItem","props","color","MenuLogo","img","isMenuOpen","DropDownMenu","DropDownMenuItem","a","planet","DropDownMenuText","DropDownMenuItemPlanet","span","DropDownMenuItemChevron","CurrentPlanetContext","CurrentPlanetUpdateContext","useCurrentPlanet","useCurrentPlanetUpdate","CurrentPlanetProvider","currentPlanet","setCurrentPlanet","newPlanet","NavBar","updateCurrentPlanet","getPlanetAccentColor","map","name","onClick","handlePlanetClick","toUpperCase","src","alt","handleDropDownMenuClick","Text","ButtonGroup","ButtonPrefix","Button","overview","internal","surface","ButtonSuffix","ImageContainer","Image","ratio","ImageAccent","LinkContainer","Label","Link","LinkIcon","FactoidContainer","Factoid","FactoidFact","FactoidLabel","Card","updateCategory","slice","toLowerCase","target","textContent","trim","pictureSuffix","imageSource","geologySource","altDescription","rel","Footer","HeaderContainer","setIsMenuOpen","handleMenuLogoClick","prevValue","CardContainer","currentPlanetData","filter","content","structure","geology","href","source","rotation","revolution","radius","temperature","FooterContainer","Home","THEME","ACCENT","App","themeValue","MERCERY","VENUS","EARTH","MARS","JUPITER","SATURN","URANUS","GlobalStyle","createGlobalStyle","theme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8wUAGMA,EAAgBC,0BAChBC,EAAmBD,0BAGlB,SAASE,IACZ,OAAOC,qBAAWJ,GAOf,SAASK,EAAT,GAA4C,IAAZC,EAAW,EAAXA,SAAW,EAERC,mBAAS,IAFD,mBAEtCC,EAFsC,KAE1BC,EAF0B,OAGVF,oBAAS,GAHC,mBAGtCG,EAHsC,KAG3BC,EAH2B,KAW9C,OALAC,qBAAU,WACNH,EAAcI,GACdF,GAAa,KACZ,IAGD,cAACX,EAAcc,SAAf,CAAwBC,MAAOP,EAA/B,SACI,cAACN,EAAiBY,SAAlB,CAA2BC,MAAOL,EAAlC,SACKJ,MC3BjB,IAAMU,EAAkBf,0BAClBgB,EAAwBhB,0BAGvB,SAASiB,IACZ,OAAOd,qBAAWY,GAQf,SAASG,EAAT,GAAuC,IAAZb,EAAW,EAAXA,SAAW,EAETC,mBAAS,YAFA,mBAElCa,EAFkC,KAExBC,EAFwB,KAQzC,OACI,cAACL,EAAgBF,SAAjB,CAA0BC,MAAOK,EAAjC,SACI,cAACH,EAAsBH,SAAvB,CAAgCC,MANxC,SAAwBO,GACpBD,EAAYC,IAKR,SACKhB,M,+CC1BJiB,EACA,UADAA,EAEF,UAFEA,EAGF,UAHEA,EAIH,UAJGA,EAKA,UALAA,EAMD,UANCA,EAOF,UAPEA,EAQD,UARCA,EAUF,OAVEA,EAWA,UAXAA,EAYC,UAZDA,EAaA,UAbAA,EAcE,UAdFA,EAeO,UAfPA,EAgBK,UAhBLA,EAiBK,UAjBLA,EAkBI,UAlBJA,EAmBO,UAnBPA,EAoBM,UApBNA,EAqBK,UArBLA,EAsBM,UAQNC,GACA,IADAA,GAED,IAFCA,GAGH,IAGGC,GACA,UADAA,GAEE,UAGFC,GACA,MADAA,GAEF,MAFEA,GAGF,OAHEA,GAIH,MAJGA,GAKA,OALAA,GAMD,IANCA,GAOF,OAPEA,GAQA,OAGAC,GACK,QADLA,GAED,QAFCA,GAGA,SAHAA,GAIJ,SCrDIC,GAAYC,IAAOC,IAAV,wjBACHL,GACNF,EAMkBA,EAMNI,GAKAA,GAMAA,IAKZI,GAAQF,IAAOC,IAAV,qLAGOH,GAIAA,ICrCV,SAASK,GAAT,GAA2C,IAA1B1B,EAAyB,EAAzBA,SAAa2B,EAAY,4BACrD,OACI,cAACL,GAAD,2BAAeK,GAAf,aAA2B3B,KAInC0B,GAAOD,MAAQ,YAAiD,IAA1BzB,EAAyB,EAAzBA,SAAa2B,EAAY,4BAC3D,OACI,cAACF,GAAD,2BAAWE,GAAX,aAAuB3B,MCRxB,I,sDAAMsB,GAAYC,IAAOC,IAAV,kHASTI,GAAOL,IAAOC,IAAV,oOACEL,GAIME,GACFH,GACND,GAIJY,GAAWN,IAAOC,IAAV,8UAMqB,SAAAM,GAAK,OAAIA,EAAMC,QAGhCV,GAKAA,IAKZW,GAAWT,IAAOU,IAAV,6NAGP,SAAAH,GAAK,OAAIA,EAAMI,WAAa,0FAA4F,OAI7Gb,IAKZc,GAAeZ,IAAOC,IAAV,0HACV,SAAAM,GAAK,OAAIA,EAAMI,WAAa,QAAU,UAOxCE,GAAmBb,IAAOc,EAAV,wTAIXpB,EAEaA,EAIHA,GACO,SAAAa,GAAK,MACf,YAAjBA,EAAMQ,OAAuBrB,EACZ,UAAjBa,EAAMQ,OAAqBrB,EACV,UAAjBa,EAAMQ,OAAqBrB,EACV,SAAjBa,EAAMQ,OAAoBrB,EACT,YAAjBa,EAAMQ,OAAuBrB,EACZ,WAAjBa,EAAMQ,OAAsBrB,EACX,WAAjBa,EAAMQ,OAAsBrB,EACxBA,KAICsB,GAAmBhB,IAAOC,IAAV,mNAGVN,IAONsB,GAAyBjB,IAAOkB,KAAV,sKAGjB,SAAAX,GAAK,MACE,YAAjBA,EAAMQ,OAAuBrB,EACZ,UAAjBa,EAAMQ,OAAqBrB,EACV,UAAjBa,EAAMQ,OAAqBrB,EACV,SAAjBa,EAAMQ,OAAoBrB,EACT,YAAjBa,EAAMQ,OAAuBrB,EACZ,WAAjBa,EAAMQ,OAAsBrB,EACX,WAAjBa,EAAMQ,OAAsBrB,EACxBA,KAMCyB,GAA0BnB,IAAOU,IAAV,6FC9G9BU,GAAuBhD,0BACvBiD,GAA6BjD,0BAG5B,SAASkD,KACZ,OAAO/C,qBAAW6C,IAIf,SAASG,KACZ,OAAOhD,qBAAW8C,IAGf,SAASG,GAAT,GAA4C,IAAZ/C,EAAW,EAAXA,SAAW,EAEJC,mBAAS,WAFL,mBAEvC+C,EAFuC,KAExBC,EAFwB,KAQ9C,OACI,cAACN,GAAqBnC,SAAtB,CAA+BC,MAAOuC,EAAtC,SACI,cAACJ,GAA2BpC,SAA5B,CAAqCC,MAN7C,SAA6ByC,GACzBD,EAAiBC,IAKb,SACKlD,MCpBF,SAASmD,GAAT,GAA2C,IAA1BnD,EAAyB,EAAzBA,SAAa2B,EAAY,4BACrD,OACI,cAAC,GAAD,2BAAeA,GAAf,aAA2B3B,KAInCmD,GAAOtB,SAAW,YAAoD,IAA1B7B,EAAyB,EAAzBA,SAAa2B,EAAY,4BACjE,OACI,cAACE,GAAD,2BAAcF,GAAd,aAA0B3B,MAIlCmD,GAAOvB,KAAO,YAA+C,EAAzB5B,SAA0B,IAAb2B,EAAY,4BACnDzB,EAAaL,IACbuD,EAAsBN,KAM5B,SAASO,EAAqBf,GAC1B,MAAkB,YAAXA,EAAuBrB,EACnB,UAAXqB,EAAqBrB,EACV,UAAXqB,EAAqBrB,EACV,SAAXqB,EAAoBrB,EACT,YAAXqB,EAAuBrB,EACZ,WAAXqB,EAAsBrB,EACX,WAAXqB,EAAsBrB,EAClBA,EAGR,OACI,cAACW,GAAD,2BAAUD,GAAV,aAEQzB,EAAWoD,KAAI,SAAAhB,GACX,OACI,cAACT,GAAD,CAAUE,MAAOsB,EAAqBf,EAAOiB,MAAOjB,OAAQA,EAAOiB,KAAwBC,QAAU,kBApBzH,SAA2BlB,GACvBc,EAAoB,GAAD,OAAId,IAmBoGmB,CAAkBnB,EAAOiB,OAApI,SACKjB,EAAOiB,KAAKG,eAD6DpB,EAAOiB,aAU7GJ,GAAOnB,SAAW,YAAoD,IAA1BhC,EAAyB,EAAzBA,SAAa2B,EAAY,4BAGjE,OACI,cAACK,GAAD,yBACI2B,IAJS,4BAKTC,IAAI,kBACAjC,GAHR,aAIS3B,MAKjBmD,GAAOhB,aAAe,YAAuD,EAAzBnC,SAA0B,IAAb2B,EAAY,4BAEnEzB,EAAaL,IACbuD,EAAsBN,KAQ5B,OACI,cAACX,GAAD,2BACQR,GADR,aAGQzB,EAAWoD,KAAI,SAAAhB,GACX,OACI,eAACF,GAAD,CACIoB,QAAU,kBAblC,SAAiClB,GAC7Bc,EAAoB,GAAD,OAAId,IAYauB,CAAwBvB,EAAOiB,OAC/CjB,OAAQA,EAAOiB,KAFnB,UAIQ,cAACf,GAAD,CAAwBF,OAAQA,EAAOiB,OACvC,cAAChB,GAAD,UAAoBD,EAAOiB,KAAKG,gBAChC,cAAChB,GAAD,CAAyBiB,IAdpC,0BAcsDC,IAAI,cANhCtB,EAAOiB,aC/E/C,I,MAAMjC,GAAYC,IAAOC,IAAV,mhCASGH,GAgBAA,IAeZI,GAAQF,IAAOC,IAAV,kaAECL,GAEAD,GAIMG,GAMAA,IAOZyC,GAAOvC,IAAOC,IAAV,gfAOQH,GAIAA,GAKAA,IASZ0C,GAAcxC,IAAOC,IAAV,ofAMXP,EAGMC,GACYD,EACNI,GAKAA,IAMZ2C,GAAezC,IAAOkB,KAAV,0KAGApB,GAGRJ,GAIJgD,GAAS1C,IAAOC,IAAV,kyBAKD,SAAAM,GAAK,OAAIA,EAAMoC,UAA+B,YAAnBpC,EAAMhB,SAAxB,2BACCgB,EAAMC,OAAU,QAC1B,SAAAD,GAAK,OAAIA,EAAMqC,UAA+B,YAAnBrC,EAAMhB,SAAxB,2BACCgB,EAAMC,OAAU,QAC1B,SAAAD,GAAK,OAAIA,EAAMsC,SAA8B,YAAnBtC,EAAMhB,SAAvB,2BACCgB,EAAMC,OAAU,QAE/B,SAAAD,GAAK,OAAIA,EAAMoC,UAA+B,YAAnBpC,EAAMhB,SAAxB,UACXG,GAAuB,QACrB,SAAAa,GAAK,OAAIA,EAAMqC,UAA+B,YAAnBrC,EAAMhB,SAAxB,UACXG,GAAwB,QACtB,SAAAa,GAAK,OAAIA,EAAMsC,SAA8B,YAAnBtC,EAAMhB,SAAvB,UACXG,GAAwB,OAGlBA,EACKA,EAGGI,GAEGJ,GAMN,SAAAa,GAAK,OAAIA,EAAMoC,UAA+B,YAAnBpC,EAAMhB,SAAxB,UAChBgB,EAAMC,OAAU,QACT,SAAAD,GAAK,OAAIA,EAAMqC,UAA+B,YAAnBrC,EAAMhB,SAAxB,UAChBgB,EAAMC,OAAU,QACT,SAAAD,GAAK,OAAIA,EAAMsC,SAA8B,YAAnBtC,EAAMhB,SAAvB,UAChBgB,EAAMC,OAAU,OAMNV,IAMZgD,GAAe9C,IAAOkB,KAAV,2HAGApB,IAMZiD,GAAiB/C,IAAOC,IAAV,kYAUFH,GAKAA,IAKZkD,GAAQhD,IAAOU,IAAV,wQAGM,SAAAH,GAAK,OAAIA,EAAM0C,QAGdnD,IACG,SAAAS,GAAK,OAAIA,EAAM0C,QAGlBnD,IACG,SAAAS,GAAK,OAAIA,EAAM0C,SAI9BC,GAAclD,IAAOU,IAAV,sLAOCZ,IAKZqD,GAAgBnD,IAAOC,IAAV,gKAKDH,IAKZsD,GAAQpD,IAAOkB,KAAV,kKAECvB,GACND,EAEYI,IAKZuD,GAAOrD,IAAOc,EAAV,4LAEEnB,GACND,EAGYI,IAKZwD,GAAWtD,IAAOU,IAAV,wJAKIZ,IAIZyD,GAAmBvD,IAAOC,IAAV,6UAQJH,IAQZ0D,GAAUxD,IAAOC,IAAV,+fAIIP,EAKCI,GAIAA,GAOAA,IAMZ2D,GAAczD,IAAOC,IAAV,iXACLL,GAEAD,GAGMG,GAKAA,IASZ4D,GAAe1D,IAAOC,IAAV,6VAENN,GACND,EAKYI,GAKAA,ICzUV,SAAS6D,GAAT,GAAyC,IAA1BlF,EAAyB,EAAzBA,SAAa2B,EAAY,4BACnD,OACI,cAAC,GAAD,2BAAgBA,GAAhB,aAA4B3B,KAIpCkF,GAAKzD,MAAQ,YAA+C,IAA1BzB,EAAyB,EAAzBA,SAAa2B,EAAY,4BACvD,OACI,cAAC,GAAD,2BAAWA,GAAX,aAAuB3B,MAI/BkF,GAAKpB,KAAO,YAA8C,IAA1B9D,EAAyB,EAAzBA,SAAa2B,EAAY,4BACrD,OACI,cAACmC,GAAD,2BAAUnC,GAAV,aAAsB3B,MAI9BkF,GAAKnB,YAAc,YAAqD,IAA1B/D,EAAyB,EAAzBA,SAAa2B,EAAY,4BACnE,OACI,cAACoC,GAAD,2BAAkBpC,GAAlB,aAA8B3B,MAItCkF,GAAKlB,aAAe,YAAsD,IAA1BhE,EAAyB,EAAzBA,SAAa2B,EAAY,4BACrE,OACI,cAACqC,GAAD,2BAAmBrC,GAAnB,aAA+B3B,MAIvCkF,GAAKjB,OAAS,YAAgD,IAA1BjE,EAAyB,EAAzBA,SAAa2B,EAAY,4BACnDqB,EAAgBH,KAChB/B,EAAWF,IACXuE,ERjCCrF,qBAAWa,GQ6DlB,OACI,cAACsD,GAAD,2BACQtC,GADR,IAEIb,SAAUA,EAASsE,MAAM,EAAE,GAAGC,cAC9B/C,OAAQU,EAAejB,MAdF,YAAlBiB,EAA8B/B,EACnB,UAAlB+B,EAA4B/B,EACV,UAAlB+B,EAA4B/B,EACV,SAAlB+B,EAA2B/B,EACT,YAAlB+B,EAA8B/B,EACZ,WAAlB+B,EAA6B/B,EACX,WAAlB+B,EAA6B/B,EACzBA,EAQAuC,QAAU,gBA/BS/C,EA+BP6E,EAAF,EAAEA,OA5BF,QAHS7E,EA+BsB6E,EAAOC,aA3BhDJ,EAAe,YACE,OAAV1E,GAAmC,cAAjBA,EAAM+E,OAC/BL,EAAe,sBACE,OAAV1E,GAAmC,YAAjBA,EAAM+E,OAC/BL,EAAe,mBAEfA,EAAe1E,EAAM2E,MAAM,KAiB/B,SAMKpF,MAKbkF,GAAKb,aAAe,YAAsD,IAA1BrE,EAAyB,EAAzBA,SAAa2B,EAAY,4BACrE,OACI,cAAC0C,GAAD,2BAAmB1C,GAAnB,aAA+B3B,MAIvCkF,GAAKZ,eAAiB,YAAwD,IAA1BtE,EAAyB,EAAzBA,SAAa2B,EAAY,4BACzE,OACI,cAAC2C,GAAD,2BAAoB3C,GAApB,aAAiC3B,MAIzCkF,GAAKX,MAAQ,YAAqC,IAAb5C,EAAY,oBACvCqB,EAAgBH,KAChB/B,EAAWF,IAEX6E,EAAwC,aAAxB3E,EAASsE,MAAM,EAAE,GAAoB,GAAK,YAC1DM,EAAW,wBAAoB1C,EAAcqC,eAAlC,OAAkDI,EAAlD,QACXE,EAAa,yBAAqB3C,EAAcqC,cAAnC,QACbO,EAAyC,aAAxB9E,EAASsE,MAAM,EAAE,GAAjB,+DACqCpC,GADrC,4CAEkBA,GAEnCwB,EAA0B,YAAlBxB,EAA8B5B,GACtB,UAAlB4B,EAA4B5B,GACV,UAAlB4B,EAA4B5B,GACV,SAAlB4B,EAA2B5B,GACT,YAAlB4B,EAA8B5B,GACZ,WAAlB4B,EAA6B5B,GACX,WAAlB4B,EAA6B5B,GACzBA,GAER,OACI,qCACI,cAACmD,GAAD,aAAOC,MAAOA,EAAOb,IAAK+B,EAAa9B,IAAKgC,GAAoBjE,IAClC,YAAxBb,EAASsE,MAAM,EAAE,GACf,cAACX,GAAD,aAAad,IAAKgC,EAAe/B,IAAG,gCAA2BZ,IAAqBrB,IAClF,SAMtBuD,GAAKT,YAAc,YAA2C,IAAb9C,EAAY,oBACzD,OACI,cAAC8C,GAAD,eAAiB9C,KAIzBuD,GAAKR,cAAgB,YAAuD,IAA1B1E,EAAyB,EAAzBA,SAAa2B,EAAY,4BACvE,OACI,cAAC+C,GAAD,2BAAmB/C,GAAnB,aAAgC3B,MAIxCkF,GAAKP,MAAQ,YAA+C,IAA1B3E,EAAyB,EAAzBA,SAAa2B,EAAY,4BACvD,OACI,cAACgD,GAAD,2BAAWhD,GAAX,aAAuB3B,MAI/BkF,GAAKN,KAAO,YAA8C,IAA1B5E,EAAyB,EAAzBA,SAAa2B,EAAY,4BACrD,OACI,cAACiD,GAAD,2BAAUjD,GAAV,IAAqB2D,OAAO,SAASO,IAAI,aAAzC,SAAuD7F,MAI/DkF,GAAKL,SAAW,YAAkD,IAA1B7E,EAAyB,EAAzBA,SAAa2B,EAAY,4BAC7D,OACI,cAACkD,GAAD,2BAAclD,GAAd,IAAyB2D,OAAO,SAASO,IAAI,aAAajC,IAAI,iBAA9D,SAAgF5D,MAIxFkF,GAAKJ,iBAAmB,YAA0D,IAA1B9E,EAAyB,EAAzBA,SAAa2B,EAAY,4BAC7E,OACI,cAACmD,GAAD,2BAAsBnD,GAAtB,aAAmC3B,MAI3CkF,GAAKH,QAAU,YAAiD,IAA1B/E,EAAyB,EAAzBA,SAAa2B,EAAY,4BAC3D,OACI,cAACoD,GAAD,2BAAapD,GAAb,aAA0B3B,MAIlCkF,GAAKD,aAAe,YAAsD,IAA1BjF,EAAyB,EAAzBA,SAAa2B,EAAY,4BACrE,OACI,cAACsD,GAAD,2BAAkBtD,GAAlB,aAA+B3B,MAGvCkF,GAAKF,YAAc,YAAqD,IAA1BhF,EAAyB,EAAzBA,SAAa2B,EAAY,4BACnE,OACI,cAACqD,GAAD,2BAAiBrD,GAAjB,aAA8B3B,MC9K/B,IAAMsB,GAAYC,IAAOC,IAAV,mMAUTsC,GAAOvC,IAAOC,IAAV,+WACJP,EACIC,GACEC,GAKFF,EAOKA,EACLA,EACWA,GC3Bb,SAAS6E,GAAT,GAA2C,IAA1B9F,EAAyB,EAAzBA,SAAa2B,EAAY,4BACrD,OACI,cAAC,GAAD,2BAAeA,GAAf,aAA2B3B,KCF5B,SAAS+F,GAAT,GAAoD,EAAzB/F,SAAyB,4BAAC,IAAD,EAEjBC,oBAAS,GAFQ,mBAE/CiC,EAF+C,KAEnC8D,EAFmC,KAIvD,SAASC,IAELD,GAAc,SAAAE,GAAS,OAAKA,KAGhC,OACI,eAACxE,GAAD,WACI,cAACA,GAAOD,MAAR,0BACA,eAAC0B,GAAD,WACI,cAACA,GAAOvB,KAAR,IACA,cAACuB,GAAOnB,SAAR,CAAiBE,WAAYA,EAAYsB,QAASyC,IAClD,cAAC9C,GAAOhB,aAAR,CAAqBqB,QAASyC,EAAqB/D,WAAYA,UCZxE,SAASiE,GAAT,GAAkD,EAAzBnG,SAAyB,4BAAC,IAChDI,EbKCN,qBAAWF,GaJZoD,EAAiBH,KACjB3C,EAAcL,IAChBuG,EAAoB,GAClBtF,EAAWF,IAQjB,OANIR,IAGAgG,EAAoBlG,EAAWmG,QAAO,SAAA/D,GAAM,OAAIA,EAAOiB,OAASP,KAAe,IAI/E,eAACkC,GAAD,WACI,eAACA,GAAKnB,YAAN,WACI,eAACmB,GAAKjB,OAAN,CAAaC,UAAQ,EAArB,UACI,cAACgB,GAAKlB,aAAN,iBADJ,cAIA,eAACkB,GAAKjB,OAAN,CAAaE,UAAQ,EAArB,UACI,cAACe,GAAKlB,aAAN,iBADJ,WAGI,cAACkB,GAAKb,aAAN,+BAEJ,eAACa,GAAKjB,OAAN,CAAaG,SAAO,EAApB,UACI,cAACc,GAAKlB,aAAN,iBADJ,UAGI,cAACkB,GAAKb,aAAN,gCAGR,cAACa,GAAKZ,eAAN,UACI,cAACY,GAAKX,MAAN,MAEFnE,EACE,4DACA,qCACI,cAAC8E,GAAKzD,MAAN,UAAc2E,EAAkB7C,OAChC,cAAC2B,GAAKpB,KAAN,UACkB,aAAbhD,EACGsF,EAAkBlC,SAASoC,QACH,aAAxBxF,EAASsE,MAAM,EAAE,GACjBgB,EAAkBG,UAAUD,QAC5BF,EAAkBI,QAAQF,UAElC,eAACpB,GAAKR,cAAN,WACI,cAACQ,GAAKP,MAAN,wBACA,eAACO,GAAKN,KAAN,CAAW6B,KAAmB,aAAb3F,EACTsF,EAAkBlC,SAASwC,OACH,aAAxB5F,EAASsE,MAAM,EAAE,GACjBgB,EAAkBG,UAAUG,OAC5BN,EAAkBI,QAAQE,OAJlC,sBAMY,cAACxB,GAAKL,SAAN,CAAelB,IAAI,mCAGnC,eAACuB,GAAKJ,iBAAN,WACI,eAACI,GAAKH,QAAN,WACI,cAACG,GAAKD,aAAN,4BACA,cAACC,GAAKF,YAAN,UAAmBoB,EAAkBO,cAEzC,eAACzB,GAAKH,QAAN,WACI,cAACG,GAAKD,aAAN,8BACA,cAACC,GAAKF,YAAN,UAAmBoB,EAAkBQ,gBAEzC,eAAC1B,GAAKH,QAAN,WACI,cAACG,GAAKD,aAAN,qBACA,cAACC,GAAKF,YAAN,UAAmBoB,EAAkBS,YAEzC,eAAC3B,GAAKH,QAAN,WACI,cAACG,GAAKD,aAAN,4BACA,cAACC,GAAKF,YAAN,UAAmBoB,EAAkBU,0BC1E1D,SAASC,GAAgBjF,GAC5B,OACI,eAACgE,GAAD,WACI,eAACA,GAAOhC,KAAR,2BAA0B,mBAAG2C,KAAK,8CAA8CnB,OAAO,SAASO,IAAI,aAA1E,6BAA1B,OACA,eAACC,GAAOhC,KAAR,uBAAsB,mBAAG2C,KAAK,gCAAR,yBAAtB,UCFG,SAASO,KACpB,OACI,gCACI,cAACjB,GAAD,IACA,cAACI,GAAD,IACA,cAACY,GAAD,OJDZjB,GAAOhC,KAAO,YAA+C,IAA1B9D,EAAyB,EAAzBA,SAAa2B,EAAY,4BAExD,OAAO,cAAC,GAAD,2BAAUA,GAAV,aAAsB3B,MKX1B,I,GAAMiH,GAAQ,CACjB,QAAW,CACPC,OAAQ,WAEZ,MAAS,CACLA,OAAQ,WAEZ,MAAS,CACLA,OAAQ,WAEZ,KAAQ,CACJA,OAAQ,WAEZ,QAAW,CACPA,OAAQ,WAEZ,OAAU,CACNA,OAAQ,WAEZ,OAAU,CACNA,OAAQ,WAEZ,QAAW,CACPA,OAAQ,YC2BDC,OA1Cf,WAEE,IAAMnE,EAAgBH,KAIhBuE,EAA+B,YAAlBpE,EAA8BiE,GAAMI,QACnC,UAAlBrE,EAA4BiE,GAAMK,MAChB,UAAlBtE,EAA4BiE,GAAMM,MAChB,SAAlBvE,EAA2BiE,GAAMO,KACf,YAAlBxE,EAA8BiE,GAAMQ,QAClB,WAAlBzE,EAA6BiE,GAAMS,OAAST,GAAMU,OAG9CC,EAAcC,YAAH,qVAEE1G,GAEAD,GAIDD,EACLA,GAKb,OACE,eAAClB,EAAD,WACE,cAAC6H,EAAD,IACE,cAAC/G,EAAD,UACE,cAAC,IAAD,CAAeiH,MAAOV,EAAtB,SACE,8BACE,cAACJ,GAAD,cCpCde,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClF,GAAD,UACE,cAAC,GAAD,QAIJmF,SAASC,eAAe,W","file":"static/js/main.2ac474b8.chunk.js","sourcesContent":["import React, {useState, useContext, createContext, useEffect } from 'react'\r\nimport data from '../data/data.json'\r\n\r\nconst PlanetContext = createContext()\r\nconst IsLoadingContext = createContext()\r\n\r\n// custom hook to access data\r\nexport function usePlanetData() {\r\n    return useContext(PlanetContext)\r\n}\r\n\r\nexport function useIsLoading() {\r\n    return useContext(IsLoadingContext)\r\n}\r\n\r\nexport function PlanetContextProvider({children}) {\r\n\r\n    const [ planetData, setPlanetData ] = useState([])\r\n    const [ isLoading, setIsLoading ] = useState(true)\r\n    \r\n    // load the planet data from supplied data.json file\r\n    useEffect(() => {\r\n        setPlanetData(data)\r\n        setIsLoading(false)\r\n      }, [])\r\n    \r\n    return (\r\n        <PlanetContext.Provider value={planetData}>\r\n            <IsLoadingContext.Provider value={isLoading}>\r\n                {children}\r\n            </IsLoadingContext.Provider>            \r\n        </PlanetContext.Provider>\r\n    )\r\n}","import React, {useState, useContext, createContext } from 'react'\r\n\r\nconst CategoryContext = createContext()\r\nconst CategoryUpdateContext = createContext()\r\n\r\n//  hook to provide access to the current planet value\r\nexport function useCategory() {\r\n    return useContext(CategoryContext)\r\n}\r\n\r\n// hook to provide access to updating the current planet value\r\nexport function useCategoryUpdate() {\r\n    return useContext(CategoryUpdateContext)\r\n}\r\n\r\nexport function CategoryProvider({children}) {\r\n\r\n    const [category, setCategory] = useState('Overview')\r\n\r\n    function updateCategory(newCategory) {\r\n        setCategory(newCategory)\r\n    }\r\n\r\n    return (\r\n        <CategoryContext.Provider value={category}>\r\n            <CategoryUpdateContext.Provider value={updateCategory}>\r\n                {children}\r\n            </CategoryUpdateContext.Provider>\r\n        </CategoryContext.Provider>\r\n    )\r\n}","export const COLOR_SCHEME = {\r\n    MERCURY: '#419ebb',\r\n    VENUS: '#eda249',\r\n    EARTH: '#6f2ed6',\r\n    MARS: '#d14c32',\r\n    JUPITER: '#d83a34',\r\n    SATURN: '#cd5120',\r\n    URANUS:'#1ec2a4',\r\n    NEPTUNE:'#2d68f0',\r\n\r\n    WHITE: '#fff',\r\n    PRIMARY: '#070724',\r\n    SECONDARY:'#38384f',\r\n    TERTIARY:'#838391',\r\n    LIGHT_GRAY:'#c1c1c8',\r\n    MERCURY_PLANET: '#def4fc',\r\n    VENUS_PLANET: '#f7cc7f',\r\n    EARTH_PLANET: '#545bfe',\r\n    MARS_PLANET: '#ff6a45',\r\n    JUPITER_PLANET: '#ecad7a',\r\n    SATURN_PLANET: '#fccb6b',\r\n    URANUS_PLANET:'#65f0d5',\r\n    NEPTUNE_PLANET:'#497efa'\r\n}\r\n\r\nexport const MEDIA_QUERY = {\r\n    MIN_WIDTH: '700px',\r\n    HORIZONTAL_RULE: '600px'\r\n}\r\n\r\nexport const FONT_WEIGHT = {\r\n    REGULAR: 400,\r\n    MEDIUM: 500,\r\n    BOLD: 700\r\n}\r\n\r\nexport const FONT_FAMILY = {\r\n    PRIMARY: 'Spartan',\r\n    SECONDARY: 'Antonio'\r\n}\r\n\r\nexport const PLANET_RATIO = {\r\n    MERCURY: '.55',\r\n    VENUS: '.65',\r\n    EARTH: '.676',\r\n    MARS: '.65',\r\n    JUPITER: '.875',\r\n    SATURN: '1',\r\n    URANUS:'.688',\r\n    NEPTUNE: '.675'\r\n}\r\n\r\nexport const BREAKPOINT = {\r\n    SMALL_TABLET: '400px',\r\n    TABLET: '700px',\r\n    DESKTOP: '1000px',\r\n    MAX: '1500px'\r\n}","import styled from 'styled-components';\r\nimport { COLOR_SCHEME, FONT_FAMILY, BREAKPOINT } from '../../../constants/constants'\r\n\r\nexport const Container = styled.div`\r\n    font-family: ${FONT_FAMILY.SECONDARY},sans-serif;\r\n    color: ${COLOR_SCHEME.WHITE};\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 1.5em 2em;\r\n    margin: 0 auto;\r\n    border-bottom: 1px solid ${COLOR_SCHEME.SECONDARY};\r\n\r\n    a {\r\n        text-decoration: none;\r\n    }\r\n\r\n    @media (min-width: ${BREAKPOINT.TABLET}) {\r\n        flex-direction: column;\r\n        padding: 2em;\r\n    }\r\n\r\n    @media (min-width: ${BREAKPOINT.DESKTOP}) {\r\n        flex-direction: row;\r\n        margin: 0;\r\n        padding: 0 3em;\r\n    }\r\n\r\n    @media (min-width: ${BREAKPOINT.MAX}) {\r\n        padding: 0 5em;\r\n    }\r\n`\r\n\r\nexport const Title = styled.div`\r\n    font-size: 1.75rem;\r\n\r\n    @media (min-width: ${BREAKPOINT.TABLET}) {\r\n        margin: .5em 0 1em;\r\n    }\r\n\r\n    @media (min-width: ${BREAKPOINT.DESKTOP}) {\r\n        margin: 0;\r\n    }\r\n`","import React from 'react'\r\nimport { Container, Title } from './styles/Header'\r\n\r\nexport default function Header({children, ...restProps}) {\r\n    return (\r\n        <Container {...restProps}>{children}</Container>\r\n    )\r\n}\r\n\r\nHeader.Title = function HeaderTitle({ children, ...restProps}) {\r\n    return (\r\n        <Title {...restProps}>{children}</Title>\r\n    )\r\n}","import styled from 'styled-components';\r\nimport { COLOR_SCHEME, FONT_FAMILY, FONT_WEIGHT, BREAKPOINT } from '../../../constants/constants'\r\n\r\nexport const Container = styled.div`\r\n    color: white;\r\n    z-index: 9;\r\n\r\n    a {\r\n        text-decoration: none;\r\n    }\r\n`\r\n\r\nexport const List = styled.div`\r\n    font-family: ${FONT_FAMILY.PRIMARY};\r\n    display: flex;\r\n    justify-content: flex-end;\r\n\r\n    @media (min-width: ${BREAKPOINT.TABLET}) {\r\n        font-weight: ${FONT_WEIGHT.BOLD};\r\n        color: ${COLOR_SCHEME.LIGHT_GRAY};\r\n        letter-spacing: 1px;        \r\n    }\r\n`\r\nexport const ListItem = styled.div`    \r\n    padding: 1em;\r\n    cursor: pointer;\r\n    display: none;\r\n\r\n    &:hover {       \r\n        box-shadow: inset 0 5px 0px 0px ${props => props.color};\r\n    } \r\n\r\n    @media (min-width: ${BREAKPOINT.TABLET}) {\r\n        display: block;\r\n        padding: 1em 1.5em;\r\n    }\r\n\r\n    @media (min-width: ${BREAKPOINT.DESKTOP}) {\r\n        padding: 3em 1.5em;\r\n    }\r\n`\r\n\r\nexport const MenuLogo = styled.img`\r\n    display: block;\r\n    /* adjust the filter to get close to #38384f */\r\n    filter: ${props => props.isMenuOpen ? 'invert(17%) sepia(7%) saturate(3029%) hue-rotate(201deg) brightness(52%) contrast(80%);' : null};\r\n    width: 100%;\r\n    height: auto;\r\n\r\n    @media (min-width: ${BREAKPOINT.TABLET}) {\r\n        display: none;\r\n    }\r\n`\r\n\r\nexport const DropDownMenu = styled.div`  \r\n    display: ${props => props.isMenuOpen ? 'block' : 'none'};\r\n    position: absolute;\r\n    width: 90%;\r\n    left: 5%;\r\n    top: 80px;\r\n`\r\n\r\nexport const DropDownMenuItem = styled.a`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background: ${COLOR_SCHEME.PRIMARY};\r\n    padding: 2em;\r\n    border-bottom: 1px solid ${COLOR_SCHEME.SECONDARY};\r\n    cursor: pointer;\r\n\r\n    &:hover {        \r\n        background-color: ${COLOR_SCHEME.SECONDARY};\r\n        border-bottom: 3px solid ${props => \r\n        props.planet === 'Mercury' ? COLOR_SCHEME.MERCURY_PLANET : \r\n        props.planet === 'Venus' ? COLOR_SCHEME.VENUS_PLANET :\r\n        props.planet === 'Earth' ? COLOR_SCHEME.EARTH_PLANET :\r\n        props.planet === 'Mars' ? COLOR_SCHEME.MARS_PLANET :\r\n        props.planet === 'Jupiter' ? COLOR_SCHEME.JUPITER_PLANET :\r\n        props.planet === 'Saturn' ? COLOR_SCHEME.SATURN_PLANET :\r\n        props.planet === 'Uranus' ? COLOR_SCHEME.URANUS_PLANET :\r\n            COLOR_SCHEME.NEPTUNE_PLANET};\r\n    } \r\n`\r\n\r\nexport const DropDownMenuText = styled.div`\r\n    font-family: 'Spartan', sans-serif;\r\n    font-size: .9375rem;\r\n    font-weight: ${FONT_WEIGHT.BOLD};\r\n    letter-spacing: 1.4px;\r\n    width: 90%;\r\n    align-items: center;\r\n    margin-top: .3em;\r\n`\r\n\r\nexport const DropDownMenuItemPlanet = styled.span`\r\n    width: 20px;\r\n    height: 20px;\r\n    background: ${props => \r\n        props.planet === 'Mercury' ? COLOR_SCHEME.MERCURY_PLANET : \r\n        props.planet === 'Venus' ? COLOR_SCHEME.VENUS_PLANET :\r\n        props.planet === 'Earth' ? COLOR_SCHEME.EARTH_PLANET :\r\n        props.planet === 'Mars' ? COLOR_SCHEME.MARS_PLANET :\r\n        props.planet === 'Jupiter' ? COLOR_SCHEME.JUPITER_PLANET :\r\n        props.planet === 'Saturn' ? COLOR_SCHEME.SATURN_PLANET :\r\n        props.planet === 'Uranus' ? COLOR_SCHEME.URANUS_PLANET :\r\n            COLOR_SCHEME.NEPTUNE_PLANET};\r\n    border-radius: 50%;\r\n    display: inline-block;\r\n    margin-right: 1.5em;\r\n`\r\n\r\nexport const DropDownMenuItemChevron = styled.img`\r\n    display: inline-block;\r\n    width: auto;\r\n    height: 10px;\r\n`","import React, {useState, useContext, createContext } from 'react'\r\n\r\nconst CurrentPlanetContext = createContext()\r\nconst CurrentPlanetUpdateContext = createContext()\r\n\r\n//  hook to provide access to the current planet value\r\nexport function useCurrentPlanet() {\r\n    return useContext(CurrentPlanetContext)\r\n}\r\n\r\n// hook to provide access to updating the current planet value\r\nexport function useCurrentPlanetUpdate() {\r\n    return useContext(CurrentPlanetUpdateContext)\r\n}\r\n\r\nexport function CurrentPlanetProvider({children}) {\r\n\r\n    const [currentPlanet, setCurrentPlanet] = useState('Mercury')\r\n\r\n    function updateCurrentPlanet(newPlanet) {\r\n        setCurrentPlanet(newPlanet)\r\n    }\r\n\r\n    return (\r\n        <CurrentPlanetContext.Provider value={currentPlanet}>\r\n            <CurrentPlanetUpdateContext.Provider value={updateCurrentPlanet}>\r\n                {children}\r\n            </CurrentPlanetUpdateContext.Provider>\r\n        </CurrentPlanetContext.Provider>\r\n    )\r\n}","import React from 'react'\r\nimport { Container, List, ListItem, MenuLogo, DropDownMenu, DropDownMenuItem, DropDownMenuItemPlanet, DropDownMenuText, DropDownMenuItemChevron } from './styles/NavBar'\r\nimport { usePlanetData } from '../../context/PlanetContext'\r\nimport { useCurrentPlanetUpdate } from '../../context/CurrentPlanetContext'\r\nimport { COLOR_SCHEME } from '../../constants/constants'\r\n\r\nexport default function NavBar({children, ...restProps}) {  \r\n    return (\r\n        <Container {...restProps}>{children}</Container>\r\n    )\r\n}\r\n\r\nNavBar.ListItem = function NavBarListItem({ children, ...restProps}) {\r\n    return (\r\n        <ListItem {...restProps}>{children}</ListItem>\r\n    )\r\n}\r\n\r\nNavBar.List = function NavBarList({ children, ...restProps}) {\r\n    const planetData = usePlanetData();\r\n    const updateCurrentPlanet = useCurrentPlanetUpdate()\r\n\r\n    function handlePlanetClick(planet) {\r\n        updateCurrentPlanet(`${planet}`)\r\n    }\r\n    \r\n    function getPlanetAccentColor(planet) {\r\n        return planet === 'Mercury' ? COLOR_SCHEME.MERCURY : \r\n        planet === 'Venus' ? COLOR_SCHEME.VENUS :\r\n        planet === 'Earth' ? COLOR_SCHEME.EARTH :\r\n        planet === 'Mars' ? COLOR_SCHEME.MARS :\r\n        planet === 'Jupiter' ? COLOR_SCHEME.JUPITER :\r\n        planet === 'Saturn' ? COLOR_SCHEME.SATURN :\r\n        planet === 'Uranus' ? COLOR_SCHEME.URANUS :\r\n            COLOR_SCHEME.NEPTUNE \r\n    }\r\n\r\n    return (\r\n        <List {...restProps}>\r\n            {\r\n                planetData.map(planet => {\r\n                    return (\r\n                        <ListItem color={getPlanetAccentColor(planet.name)} planet={planet.name} key={planet.name} onClick={ () => handlePlanetClick(planet.name)}>\r\n                            {planet.name.toUpperCase()}\r\n                        </ListItem>\r\n                    )\r\n                })\r\n            }\r\n        </List>\r\n    )\r\n}\r\n\r\nNavBar.MenuLogo = function NavBarMenuLogo({ children, ...restProps}) {\r\n    const imageSource = `images/icon-hamburger.svg`\r\n    \r\n    return (\r\n        <MenuLogo \r\n            src={imageSource}\r\n            alt=\"menu hamburger\"\r\n            {...restProps}>\r\n                {children}\r\n        </MenuLogo>\r\n    )\r\n}\r\n\r\nNavBar.DropDownMenu = function NavBarDropDownMenu({ children, ...restProps}) {\r\n\r\n    const planetData = usePlanetData();\r\n    const updateCurrentPlanet = useCurrentPlanetUpdate()\r\n\r\n    function handleDropDownMenuClick(planet) {\r\n        updateCurrentPlanet(`${planet}`)        \r\n    }    \r\n\r\n    const imageSource = `images/icon-chevron.svg`\r\n\r\n    return (\r\n        <DropDownMenu \r\n            {...restProps}>\r\n            {\r\n                planetData.map(planet => {\r\n                    return (\r\n                        <DropDownMenuItem key={planet.name} \r\n                            onClick={ () => handleDropDownMenuClick(planet.name) }\r\n                            planet={planet.name}\r\n                            >\r\n                                <DropDownMenuItemPlanet planet={planet.name}/>\r\n                                <DropDownMenuText >{planet.name.toUpperCase()}</DropDownMenuText>\r\n                                <DropDownMenuItemChevron src={imageSource} alt=\"chevron\"/>\r\n                        </DropDownMenuItem>\r\n                    )\r\n                })\r\n            }\r\n        </DropDownMenu>\r\n    )\r\n}","import styled from 'styled-components';\r\nimport { COLOR_SCHEME, FONT_FAMILY, FONT_WEIGHT, BREAKPOINT } from '../../../constants/constants'\r\n\r\nexport const Container = styled.div`\r\n    color: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 0 2em; \r\n    margin: 0 auto;\r\n\r\n    @media (min-width: ${BREAKPOINT.TABLET}) {\r\n        padding: 1em 4em 4em;\r\n        display: grid;\r\n        margin: 0 auto;\r\n        gap: 0 1em;\r\n        grid-template-columns: repeat(2, 1fr);\r\n        grid-template-rows: 425px;\r\n        grid-template-areas: \r\n            \"image image\"\r\n            \"title buttons\"\r\n            \"text buttons\"\r\n            \"links buttons\"\r\n            \"factoids factoids\"        \r\n        ;\r\n    }\r\n\r\n    @media (min-width: ${BREAKPOINT.DESKTOP}) {\r\n        grid-template-columns: repeat(2, 1fr) 350px; \r\n        grid-template-rows: 1fr;\r\n        grid-template-areas: \r\n            \"image image title\"\r\n            \"image image text\"\r\n            \"image image links\"\r\n            \"image image buttons\"\r\n            \"image image buttons\"\r\n            \"factoids factoids factoids\"        \r\n        ;\r\n        max-width: 1200px;\r\n    }\r\n`\r\n\r\nexport const Title = styled.div`\r\n    grid-area: title;\r\n    font-family: ${FONT_FAMILY.SECONDARY};\r\n    font-size: 2.5rem;\r\n    font-weight: ${FONT_WEIGHT.MEDIUM};\r\n    text-transform: uppercase;\r\n    margin: .2em ;\r\n\r\n    @media (min-width: ${BREAKPOINT.TABLET}) {\r\n        font-size: 3rem;\r\n        margin-left: 0;\r\n        margin-top: .5em;\r\n    }\r\n\r\n    @media (min-width: ${BREAKPOINT.DESKTOP}) {\r\n        font-size: 5rem;\r\n        margin-bottom: .1em;\r\n        padding: 1em 0 .1em;\r\n    }\r\n`\r\n\r\nexport const Text = styled.div`\r\n    grid-area: text;\r\n    padding: 1em 0 4em;\r\n    width: 90%;\r\n    line-height: 2;\r\n    text-align: center;    \r\n\r\n    @media (min-width: ${BREAKPOINT.SMALL_TABLET}) {\r\n        max-width: 70%;\r\n    }\r\n\r\n    @media (min-width: ${BREAKPOINT.TABLET}) {\r\n        text-align: left;\r\n        max-width: unset;\r\n        padding: 1em 0 2em;\r\n    }\r\n    @media (min-width: ${BREAKPOINT.DESKTOP}) {\r\n        font-size: .875rem;\r\n        line-height: 1.8;\r\n        width: 100%;\r\n        padding: 0;\r\n        min-height: 180px;\r\n    }\r\n`\r\n\r\nexport const ButtonGroup = styled.div`\r\n    grid-area: buttons;\r\n    display: flex;\r\n    justify-content: space-evenly;    \r\n    text-transform: uppercase;\r\n    width: 100%;\r\n    color: ${COLOR_SCHEME.TERTIARY};\r\n    font-size: .5625rem;\r\n    letter-spacing: 1.9px;\r\n    font-weight: ${FONT_WEIGHT.BOLD};\r\n    border-bottom: 1px solid ${COLOR_SCHEME.SECONDARY};\r\n    @media (min-width: ${BREAKPOINT.TABLET}) {\r\n        border-bottom: unset;\r\n        flex-direction: column;        \r\n    }\r\n\r\n    @media (min-width: ${BREAKPOINT.DESKTOP}) {\r\n        margin-bottom: 6em;\r\n        font-size: .75rem;\r\n    }\r\n`\r\n\r\nexport const ButtonPrefix = styled.span`\r\n    display: none;\r\n\r\n    @media (min-width: ${BREAKPOINT.TABLET}) {\r\n        display: inline-block;\r\n        margin-right: 2em;\r\n        color: ${COLOR_SCHEME.LIGHT_GRAY};\r\n    }\r\n`\r\n\r\nexport const Button = styled.div`\r\n    padding: 2em .5em;\r\n    margin: 0 2em;\r\n    cursor: pointer;\r\n\r\n    box-shadow: ${props => props.overview && props.category === 'overvie' ? \r\n        `inset 0px -3px 0 ${props.color}` : null } ;  \r\n    box-shadow: ${props => props.internal && props.category === 'interna' ? \r\n        `inset 0px -3px 0 ${props.color}` : null } ;  \r\n    box-shadow: ${props => props.surface && props.category === 'surface' ? \r\n        `inset 0px -3px 0 ${props.color}` : null  } ;  \r\n\r\n    color: ${props => props.overview && props.category === 'overvie' ? \r\n        `${COLOR_SCHEME.WHITE}` : null } ;  \r\n    color: ${props => props.internal && props.category === 'interna' ? \r\n        `${COLOR_SCHEME.WHITE}`  : null } ;  \r\n    color: ${props => props.surface && props.category === 'surface' ? \r\n        `${COLOR_SCHEME.WHITE}`  : null  } ;  \r\n\r\n    &:hover {        \r\n        color: ${COLOR_SCHEME.WHITE}; \r\n        background: ${COLOR_SCHEME.SECONDARY};\r\n    }\r\n\r\n    @media (min-width: ${BREAKPOINT.TABLET}) {\r\n        box-shadow: unset;\r\n        border: 1px solid ${COLOR_SCHEME.SECONDARY};\r\n        padding: 2em 3em;\r\n        margin-bottom: 2em;\r\n        letter-spacing: 1.5px;\r\n        min-width: 70%;\r\n\r\n        background: ${props => props.overview && props.category === 'overvie' ? \r\n            `${props.color}` : null } ;  \r\n        background: ${props => props.internal && props.category === 'interna' ? \r\n            `${props.color}` : null } ;  \r\n        background: ${props => props.surface && props.category === 'surface' ? \r\n            `${props.color}` : null  } ;  \r\n\r\n        margin-right: 0;\r\n        margin-left: auto;\r\n    }\r\n    \r\n    @media (min-width: ${BREAKPOINT.DESKTOP}) {\r\n        margin-left: 0;\r\n        padding: 1.5em 2.5em;\r\n        margin-bottom: 1em;\r\n    }\r\n`\r\nexport const ButtonSuffix = styled.span`\r\n    display: none;\r\n\r\n    @media (min-width: ${BREAKPOINT.TABLET}) {\r\n        display: inline-block;\r\n\r\n    }\r\n`\r\n\r\nexport const ImageContainer = styled.div`\r\n    grid-area: image;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    min-height: 300px;\r\n    width: 90%;\r\n    position: relative;\r\n  \r\n    @media (min-width: ${BREAKPOINT.SMALL_TABLET}) {\r\n        min-height: 425px;\r\n        margin: 0 auto;\r\n    }\r\n\r\n    @media (min-width: ${BREAKPOINT.DESKTOP}) {\r\n        min-height: unset;\r\n    }\r\n`\r\n\r\nexport const Image = styled.img`\r\n    margin: auto; \r\n    height: auto;\r\n    width: calc(70% * ${props => props.ratio});\r\n    z-index: -2;\r\n\r\n    @media (min-width: ${BREAKPOINT.SMALL_TABLET}) {\r\n        width: calc(60% * ${props => props.ratio});\r\n    }\r\n\r\n    @media (min-width: ${BREAKPOINT.DESKTOP}) {\r\n        width: calc(90% * ${props => props.ratio});  \r\n    }\r\n`\r\n\r\nexport const ImageAccent = styled.img`\r\n    width: 24%;\r\n    height: auto;\r\n    position: absolute;\r\n    z-index: -1;\r\n    top: 53%;\r\n\r\n    @media (min-width: ${BREAKPOINT.DESKTOP}) {\r\n        top: 70%;\r\n    }\r\n`\r\n\r\nexport const LinkContainer = styled.div`\r\n    grid-area: links;\r\n    display: flex;    \r\n    margin: 0 0 3em;\r\n\r\n    @media (min-width: ${BREAKPOINT.TABLET}) {\r\n    margin: 0 0 4em;\r\n    }\r\n`\r\n\r\nexport const Label = styled.span`\r\n    font-size: .75rem;\r\n    font-weight: ${FONT_WEIGHT.REGULAR};\r\n    color: ${COLOR_SCHEME.TERTIARY};\r\n\r\n    @media (min-width: ${BREAKPOINT.DESKTOP}) {\r\n        font-size: .875rem;\r\n    }\r\n`\r\n\r\nexport const Link = styled.a`    \r\n    font-size: .75rem;\r\n    font-weight: ${FONT_WEIGHT.BOLD};\r\n    color: ${COLOR_SCHEME.TERTIARY};\r\n    padding: 0 .3em;\r\n\r\n    @media (min-width: ${BREAKPOINT.DESKTOP}) {\r\n        font-size: .875rem;\r\n    }\r\n`\r\n\r\nexport const LinkIcon = styled.img`\r\n    width: 12px;\r\n    height: auto;\r\n    margin-left: .5em;\r\n\r\n    @media (min-width: ${BREAKPOINT.DESKTOP}) {\r\n        width: 14px;\r\n    }\r\n`\r\nexport const FactoidContainer = styled.div`\r\n    grid-area: factoids;\r\n    width: 90%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-content: center;\r\n\r\n    @media (min-width: ${BREAKPOINT.TABLET}) {\r\n        flex-direction: row;\r\n        width: 100%;\r\n        justify-content: space-between;\r\n        padding: 0;\r\n    }\r\n`\r\n\r\nexport const Factoid = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    border: 1px solid ${COLOR_SCHEME.SECONDARY};\r\n    padding: 1em 2em;\r\n    box-sizing: border-box;\r\n    margin: 0 auto 1em;\r\n    \r\n    @media (min-width: ${BREAKPOINT.SMALL_TABLET}) {\r\n        width: 85%;\r\n    }\r\n\r\n    @media (min-width: ${BREAKPOINT.TABLET}) {\r\n        flex-direction: column;\r\n        padding: 1.5em 1em;\r\n        margin: 0;\r\n        width: 24%;\r\n    }\r\n    \r\n    @media (min-width: ${BREAKPOINT.DESKTOP}) {\r\n        width: 23%;\r\n        padding: 2.5em 2em;\r\n    }\r\n`\r\n\r\nexport const FactoidFact = styled.div`\r\n    font-family: ${FONT_FAMILY.SECONDARY};\r\n    font-size: 1.25rem;\r\n    font-weight: ${FONT_WEIGHT.MEDIUM};\r\n    text-transform: uppercase;\r\n\r\n    @media (min-width: ${BREAKPOINT.TABLET}) {\r\n        font-size: 1.5rem;\r\n        letter-spacing: -.3px;\r\n    }\r\n\r\n    @media (min-width: ${BREAKPOINT.DESKTOP}) {\r\n        font-size: 2rem;\r\n    }\r\n\r\n    @media (min-width: 1100px) {\r\n        font-size: 2.5rem;\r\n    }\r\n`\r\n\r\nexport const FactoidLabel = styled.div`\r\n    font-size: .5rem;\r\n    font-weight: ${FONT_WEIGHT.BOLD};\r\n    color: ${COLOR_SCHEME.TERTIARY};\r\n    text-transform: uppercase;\r\n    letter-spacing: 1.5px;\r\n    align-self: center;\r\n\r\n    @media (min-width: ${BREAKPOINT.TABLET}) {\r\n        align-self: flex-start;\r\n        margin-bottom: 1em;\r\n    }\r\n\r\n    @media (min-width: ${BREAKPOINT.DESKTOP}) {\r\n        font-size: .6875rem;\r\n    }\r\n`","import React from 'react'\r\nimport { Container, Title, Text, \r\n         ButtonGroup, ButtonPrefix, Button, ButtonSuffix,\r\n         ImageContainer, Image, ImageAccent, \r\n         LinkContainer, Label, Link, LinkIcon, \r\n         FactoidContainer, Factoid, FactoidLabel, FactoidFact\r\n        } from './styles/Card'\r\nimport { useCurrentPlanet} from '../../context/CurrentPlanetContext'\r\nimport { useCategory, useCategoryUpdate } from '../../context/CategoryContext'\r\nimport { COLOR_SCHEME, PLANET_RATIO } from '../../constants/constants'\r\n\r\n\r\nexport default function Card({children, ...restProps}) {\r\n    return (\r\n        <Container { ...restProps}>{children}</Container>\r\n    )\r\n}\r\n\r\nCard.Title = function CardTitle({ children, ...restProps}) {\r\n    return (\r\n        <Title {...restProps}>{children}</Title>\r\n    )\r\n}\r\n\r\nCard.Text = function CardText({ children, ...restProps}) {\r\n    return (\r\n        <Text {...restProps}>{children}</Text>\r\n    )\r\n}\r\n\r\nCard.ButtonGroup = function CardButtonGroup({ children, ...restProps}) {\r\n    return (\r\n        <ButtonGroup  {...restProps}>{children}</ButtonGroup>\r\n    )\r\n}\r\n\r\nCard.ButtonPrefix = function CardButtonPrefix({ children, ...restProps}) {\r\n    return (\r\n        <ButtonPrefix  {...restProps}>{children}</ButtonPrefix>\r\n    )\r\n}\r\n\r\nCard.Button = function CardButton({ children, ...restProps}) {\r\n    const currentPlanet = useCurrentPlanet()\r\n    const category = useCategory()\r\n    const updateCategory = useCategoryUpdate();\r\n\r\n    function handleButtonClick(value) {\r\n\r\n        /* if the prefix or suffix is clicked instead of anywhere else on the button, then adjust the value to the expected category value */\r\n        if (value === '01') {\r\n            updateCategory('Overview')\r\n        } else if (value === '02' || value.trim() === 'Structure') {\r\n            updateCategory('Internal Structure')\r\n        } else if (value === '03' || value.trim() === 'Geology') {\r\n            updateCategory('Surface Geology')\r\n        } else {\r\n            updateCategory(value.slice(2))\r\n        }\r\n    }\r\n\r\n    // resoloves the accent color used as the background for the button\r\n    function getPlanetAccentColor() {\r\n        return currentPlanet === 'Mercury' ? COLOR_SCHEME.MERCURY : \r\n        currentPlanet === 'Venus' ? COLOR_SCHEME.VENUS :\r\n        currentPlanet === 'Earth' ? COLOR_SCHEME.EARTH :\r\n        currentPlanet === 'Mars' ? COLOR_SCHEME.MARS :\r\n        currentPlanet === 'Jupiter' ? COLOR_SCHEME.JUPITER :\r\n        currentPlanet === 'Saturn' ? COLOR_SCHEME.SATURN :\r\n        currentPlanet === 'Uranus' ? COLOR_SCHEME.URANUS :\r\n            COLOR_SCHEME.NEPTUNE \r\n    }\r\n\r\n    return (\r\n        <Button \r\n            {...restProps} \r\n            category={category.slice(0,7).toLowerCase()}  \r\n            planet={currentPlanet} color={getPlanetAccentColor()} \r\n            onClick={ ({target})=> handleButtonClick(target.textContent)} \r\n        >\r\n            {children}\r\n        </Button>\r\n    )\r\n}\r\n\r\nCard.ButtonSuffix = function CardButtonSuffix({ children, ...restProps}) {\r\n    return (\r\n        <ButtonSuffix  {...restProps}>{children}</ButtonSuffix>\r\n    )\r\n}\r\n\r\nCard.ImageContainer = function CardImageContainer({ children, ...restProps}) {\r\n    return (\r\n        <ImageContainer {...restProps} >{children}</ImageContainer>\r\n    )\r\n}\r\n\r\nCard.Image = function CardImage({ ...restProps}) {    \r\n    const currentPlanet = useCurrentPlanet()\r\n    const category = useCategory()\r\n\r\n    const pictureSuffix = category.slice(0,8) !== 'Internal' ? \"\" : \"-internal\"\r\n    const imageSource = `images/planet-${currentPlanet.toLowerCase()}${pictureSuffix}.svg`\r\n    const geologySource = `images/geology-${currentPlanet.toLowerCase()}.png`\r\n    const altDescription = category.slice(0,8) === 'Internal' ? \r\n        `stylistic rendering of the internal layers of planet ${currentPlanet}` : \r\n        `stylistic rendering of the planet ${currentPlanet}` \r\n    \r\n    const ratio = currentPlanet === 'Mercury' ? PLANET_RATIO.MERCURY : \r\n        currentPlanet === 'Venus' ? PLANET_RATIO.VENUS :\r\n        currentPlanet === 'Earth' ? PLANET_RATIO.EARTH :\r\n        currentPlanet === 'Mars' ? PLANET_RATIO.MARS :\r\n        currentPlanet === 'Jupiter' ? PLANET_RATIO.JUPITER :\r\n        currentPlanet === 'Saturn' ? PLANET_RATIO.SATURN :\r\n        currentPlanet === 'Uranus' ? PLANET_RATIO.URANUS :\r\n            PLANET_RATIO.NEPTUNE\r\n \r\n    return (\r\n        <>\r\n            <Image ratio={ratio} src={imageSource} alt={altDescription} {...restProps} />\r\n                { category.slice(0,7) === 'Surface' ? \r\n                    <ImageAccent src={geologySource} alt={`geology of the planet ${currentPlanet}`} {...restProps} /> \r\n                    : null  \r\n                }\r\n        </>\r\n    )\r\n}\r\n\r\nCard.ImageAccent = function CardImageAccent({ ...restProps}) {\r\n    return (\r\n        <ImageAccent {...restProps} />\r\n    )\r\n}\r\n\r\nCard.LinkContainer = function CardLinkContainer({ children, ...restProps}) {\r\n    return (\r\n        <LinkContainer {...restProps} >{children}</LinkContainer>\r\n    )\r\n}\r\n\r\nCard.Label = function CardLabel({ children, ...restProps}) {\r\n    return (\r\n        <Label {...restProps}>{children}</Label>\r\n    )\r\n}\r\n\r\nCard.Link = function CardLink({ children, ...restProps}) {\r\n    return (\r\n        <Link {...restProps} target=\"_blank\" rel=\"noreferrer\">{children}</Link>\r\n    )\r\n}\r\n\r\nCard.LinkIcon = function CardLinkIcon({ children, ...restProps}) {\r\n    return (\r\n        <LinkIcon {...restProps} target=\"_blank\" rel=\"noreferrer\" alt=\"wikipedia link\">{children}</LinkIcon>\r\n    )\r\n}\r\n\r\nCard.FactoidContainer = function CardFactoidContainer({ children, ...restProps}) {\r\n    return (\r\n        <FactoidContainer {...restProps} >{children}</FactoidContainer>\r\n    )\r\n}\r\n\r\nCard.Factoid = function CardFactoid({ children, ...restProps}) {\r\n    return (\r\n        <Factoid {...restProps} >{children}</Factoid>\r\n    )\r\n}\r\n\r\nCard.FactoidLabel = function CardFactoidLabel({ children, ...restProps}) {\r\n    return (\r\n        <FactoidLabel {...restProps} >{children}</FactoidLabel>\r\n    )\r\n}\r\nCard.FactoidFact = function CardFactoidFact({ children, ...restProps}) {\r\n    return (\r\n        <FactoidFact {...restProps} >{children}</FactoidFact>\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\nimport { COLOR_SCHEME, FONT_WEIGHT, FONT_FAMILY } from '../../../constants/constants'\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 2em 1em 1em;\r\n    margin: 0 auto;\r\n   \r\n`\r\n\r\nexport const Text = styled.div`\r\n    color: ${COLOR_SCHEME.TERTIARY};\r\n    font-size: ${FONT_WEIGHT.BOLD};\r\n    font-family: ${FONT_FAMILY.PRIMARY};\r\n    padding-bottom: 1.5em;\r\n\r\n    a {\r\n        text-decoration: none ;\r\n        color: ${COLOR_SCHEME.WHITE};\r\n        padding: .3em .5em;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    a:hover, \r\n    a:focus {\r\n        background: ${COLOR_SCHEME.SECONDARY};\r\n        color: ${COLOR_SCHEME.WHITE};\r\n        border: 1px solid ${COLOR_SCHEME.WHITE};\r\n    }\r\n`","import React from 'react'\r\nimport { Container, Text } from './styles/Footer'\r\n\r\nexport default function Footer({children, ...restProps}) {\r\n    return (\r\n        <Container {...restProps}>{children}</Container>\r\n    )\r\n}\r\n\r\nFooter.Text = function FooterText({children, ...restProps}) { \r\n   \r\n    return <Text {...restProps}>{children}</Text>\r\n}","import React, { useState } from 'react'\r\nimport { Header, NavBar } from '../components';\r\n\r\nexport function HeaderContainer( {children, ...restProps}) {\r\n    // state to display or hide the menu\r\n    const [ isMenuOpen, setIsMenuOpen ] = useState(false)\r\n\r\n    function handleMenuLogoClick() {\r\n        // toggle current boolean value \r\n        setIsMenuOpen(prevValue => !prevValue)\r\n    }\r\n\r\n    return (        \r\n        <Header>\r\n            <Header.Title >THE PLANETS</Header.Title>\r\n            <NavBar >\r\n                <NavBar.List></NavBar.List>\r\n                <NavBar.MenuLogo isMenuOpen={isMenuOpen} onClick={handleMenuLogoClick}></NavBar.MenuLogo>\r\n                <NavBar.DropDownMenu onClick={handleMenuLogoClick} isMenuOpen={isMenuOpen}></NavBar.DropDownMenu>\r\n            </NavBar>            \r\n        </Header>\r\n    )\r\n}","import React from 'react'\r\nimport { Card } from '../components';\r\nimport { useCurrentPlanet } from '../context/CurrentPlanetContext'\r\nimport { usePlanetData, useIsLoading } from '../context/PlanetContext' \r\nimport { useCategory } from '../context/CategoryContext' \r\n\r\nexport function CardContainer( {children, ...restProps}) {\r\n    const isLoading = useIsLoading();\r\n    const currentPlanet  = useCurrentPlanet();\r\n    const planetData  = usePlanetData();\r\n    let currentPlanetData = [];\r\n    const category = useCategory();\r\n\r\n    if (isLoading) {\r\n        // console.log('currenting loading data')\r\n    } else {\r\n        currentPlanetData = planetData.filter(planet => planet.name === currentPlanet)[0]\r\n    }\r\n    \r\n    return (        \r\n        <Card>\r\n            <Card.ButtonGroup>\r\n                <Card.Button overview >\r\n                    <Card.ButtonPrefix>01</Card.ButtonPrefix>\r\n                    Overview\r\n                </Card.Button>\r\n                <Card.Button internal >\r\n                    <Card.ButtonPrefix>02</Card.ButtonPrefix>\r\n                    Internal\r\n                    <Card.ButtonSuffix>&nbsp;Structure</Card.ButtonSuffix>\r\n                </Card.Button>\r\n                <Card.Button surface >\r\n                    <Card.ButtonPrefix>03</Card.ButtonPrefix>\r\n                    Surface\r\n                    <Card.ButtonSuffix>&nbsp;Geology</Card.ButtonSuffix>\r\n                </Card.Button>\r\n            </Card.ButtonGroup>\r\n            <Card.ImageContainer>\r\n                <Card.Image />\r\n            </Card.ImageContainer>\r\n            { isLoading ? \r\n                <div>planetary data is loading</div> :\r\n                <>\r\n                    <Card.Title >{currentPlanetData.name}</Card.Title>\r\n                    <Card.Text>\r\n                        {category === 'Overview' ? \r\n                            currentPlanetData.overview.content :\r\n                            category.slice(0,8) === 'Internal' ?\r\n                            currentPlanetData.structure.content :\r\n                            currentPlanetData.geology.content}\r\n                    </Card.Text>\r\n                    <Card.LinkContainer>\r\n                        <Card.Label>Source : </Card.Label>\r\n                        <Card.Link href={category === 'Overview' ? \r\n                                currentPlanetData.overview.source :\r\n                                category.slice(0,8) === 'Internal' ?\r\n                                currentPlanetData.structure.source :\r\n                                currentPlanetData.geology.source}>\r\n                                    Wikipedia\r\n                                    <Card.LinkIcon src=\"./images/icon-source.svg\"/>\r\n                        </Card.Link>\r\n                    </Card.LinkContainer>\r\n                    <Card.FactoidContainer>\r\n                        <Card.Factoid>\r\n                            <Card.FactoidLabel>Rotation Time</Card.FactoidLabel>\r\n                            <Card.FactoidFact>{currentPlanetData.rotation}</Card.FactoidFact>\r\n                        </Card.Factoid>\r\n                        <Card.Factoid>\r\n                            <Card.FactoidLabel>Revolution Time</Card.FactoidLabel>\r\n                            <Card.FactoidFact>{currentPlanetData.revolution}</Card.FactoidFact>\r\n                        </Card.Factoid>\r\n                        <Card.Factoid>\r\n                            <Card.FactoidLabel>Radius</Card.FactoidLabel>\r\n                            <Card.FactoidFact>{currentPlanetData.radius}</Card.FactoidFact>\r\n                        </Card.Factoid>\r\n                        <Card.Factoid>\r\n                            <Card.FactoidLabel>Average Temp.</Card.FactoidLabel>\r\n                            <Card.FactoidFact>{currentPlanetData.temperature}</Card.FactoidFact>\r\n                        </Card.Factoid>\r\n                    </Card.FactoidContainer>\r\n                </>\r\n            }\r\n        </Card>\r\n    )\r\n}","import React from 'react'\r\nimport { Footer } from '../components';\r\n\r\nexport function FooterContainer(props) {\r\n    return (\r\n        <Footer >\r\n            <Footer.Text>Challenge by <a href=\"https://www.frontendmentor.io?ref=challenge\" target=\"_blank\" rel=\"noreferrer\">Frontend Mentor</a>.</Footer.Text>\r\n            <Footer.Text>Coded by <a href=\"mailto:rhynedavid16@gmail.com\">David Rhyne</a>.</Footer.Text>\r\n        </Footer>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { HeaderContainer } from '../containers/header'\r\nimport { CardContainer } from '../containers/card'\r\nimport { FooterContainer } from '../containers/footer'\r\n\r\nexport default function Home() { \r\n    return (\r\n        <div>\r\n            <HeaderContainer />\r\n            <CardContainer />\r\n            <FooterContainer />\r\n        </div>\r\n    )\r\n}","export const THEME = {\r\n    \"MERCERY\": {\r\n        ACCENT: '#419ebb',\r\n    },\r\n    \"VENUS\": {\r\n        ACCENT: '#eda249',\r\n    },\r\n    \"EARTH\": {\r\n        ACCENT: '#6f2ed6',\r\n    },\r\n    \"MARS\": {\r\n        ACCENT: '#d14c32',\r\n    },\r\n    \"JUPITER\": {\r\n        ACCENT: '#d83a34',\r\n    },\r\n    \"SATURN\": {\r\n        ACCENT: '#cd5120',\r\n    },\r\n    \"URANUS\": {\r\n        ACCENT: '#1ec2a4',\r\n    },\r\n    \"NEPTUNE\": {\r\n        ACCENT: '#2d68f0',\r\n    }        \r\n} \r\n","import { PlanetContextProvider } from './context/PlanetContext'\nimport { CategoryProvider } from './context/CategoryContext'\nimport { Home } from './pages'\nimport { ThemeProvider, createGlobalStyle } from 'styled-components'\nimport { useCurrentPlanet } from './context/CurrentPlanetContext'\nimport { THEME } from './constants/themes'\nimport { COLOR_SCHEME, FONT_FAMILY, FONT_WEIGHT } from './constants/constants'\n\nfunction App() {\n\n  const currentPlanet = useCurrentPlanet()\n\n  // using styled-components ThemeProvider to provide \n  // the current planet's accent color to components for styling\n  const themeValue = currentPlanet === 'Mercury' ? THEME.MERCERY : \n    currentPlanet === 'Venus' ? THEME.VENUS : \n    currentPlanet === 'Earth' ? THEME.EARTH : \n    currentPlanet === 'Mars' ? THEME.MARS : \n    currentPlanet === 'Jupiter' ? THEME.JUPITER : \n    currentPlanet === 'Saturn' ? THEME.SATURN : THEME.URANUS\n\n  // using styled-components createGlobalStyle for some global CSS values\n  const GlobalStyle = createGlobalStyle`\n    body {\n      font-family: ${FONT_FAMILY.PRIMARY}, sans-serif;\n      font-size: .6875rem;\n      font-weight: ${FONT_WEIGHT.REGULAR};\n      box-sizing: border-box;\n      margin: 0 auto;\n      padding: 0;\n      background: ${COLOR_SCHEME.PRIMARY};\n      color: ${COLOR_SCHEME.WHITE};\n      max-width: 1600px;\n      background-image: url('./images/background-stars.svg');\n  }\n`\n  return (\n    <PlanetContextProvider>\n      <GlobalStyle />\n        <CategoryProvider>\n          <ThemeProvider theme={themeValue}>\n            <div>\n              <Home />\n            </div>\n          </ThemeProvider>\n        </CategoryProvider>\n    </PlanetContextProvider>    \n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { CurrentPlanetProvider } from './context/CurrentPlanetContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <CurrentPlanetProvider>\n      <App />\n    </CurrentPlanetProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}